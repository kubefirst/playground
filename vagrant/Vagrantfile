# -*- mode: ruby -*-
# vi: set ft=ruby :

open(".env", "r").readlines.each {
  |l|
  kv = l.split("=")
  if kv[1] != nil
    ENV[kv[0]] = kv[1].strip
  end
}

LIBVIRT_HOST_IP = ENV["LIBVIRT_HOST_IP"] || "192.168.56.1"
PROVISIONER_IP = ENV["PROVISIONER_IP"] || "192.168.56.4"
LOADBALANCER_IP = ENV["LOADBALANCER_IP"] || "192.168.56.4"
GATEWAY_IP = ENV["GATEWAY_IP"] || ""

MACHINE1_IP = ENV["MACHINE1_IP"]
MACHINE1_MAC = (ENV["MACHINE1_MAC"] || "00:00:00:00:00:43").downcase

MACHINE2_IP = ENV["MACHINE2_IP"]
MACHINE2_MAC = (ENV["MACHINE2_MAC"] || "00:00:00:00:00:44").downcase

MACHINE3_IP = ENV["MACHINE3_IP"]
MACHINE3_MAC = (ENV["MACHINE3_MAC"] || "00:00:00:00:00:45").downcase

MACHINE4_IP = ENV["MACHINE4_IP"]
MACHINE4_MAC = (ENV["MACHINE4_MAC"] || "00:00:00:00:00:46").downcase

HELM_CHART_VERSION = ENV["HELM_CHART_VERSION"] || "0.4.0"
KUBECTL_VERSION = ENV["KUBECTL_VERSION"] || "1.28.3"
K3D_VERSION = ENV["K3D_VERSION"] || "v5.6.0"
HELM_LOADBALANCER_INTERFACE = ENV["HELM_LOADBALANCER_INTERFACE"] || "eth1"
DEST_DIR_BASE = "/clusterzero/"

Vagrant.configure("2") do |config|
  config.vm.provider :libvirt do |libvirt|
    libvirt.qemu_use_session = false
  end

  config.vm.define "clusterzero" do |clusterzero|
    clusterzero.vm.box = "generic/ubuntu2204"
    clusterzero.vm.synced_folder ".", DEST_DIR_BASE
    clusterzero.vm.network "private_network", ip: "192.168.56.4", netmask: "255.255.255.0",
                                        libvirt__network_name: "tink_network",
                                        libvirt__host_ip: LIBVIRT_HOST_IP,
                                        libvirt__netmask: "255.255.255.0",
                                        libvirt__dhcp_enabled: false

    clusterzero.vm.provider "libvirt" do |l, override|
      l.memory = 2048
      l.cpus = 2
      override.vm.synced_folder ".", DEST_DIR_BASE, type: "rsync"
    end

    clusterzero.vm.provision :shell, path: "setup.sh", args: [PROVISIONER_IP, MACHINE1_IP, MACHINE1_MAC, DEST_DIR_BASE, LOADBALANCER_IP, HELM_CHART_VERSION, HELM_LOADBALANCER_INTERFACE, KUBECTL_VERSION, K3D_VERSION, GATEWAY_IP]
  end

  config.vm.define :machine1, autostart: false do |machine1|
    machine1.ssh.insert_key = false
    machine1.vm.boot_timeout = 10
    machine1.vm.synced_folder ".", "/vagrant", disabled: true
    machine1.vm.network :private_network, ip: MACHINE1_IP,
                                          mac: MACHINE1_MAC.gsub(/[:-]/, "").strip,
                                          adapter: 1,
                                          libvirt__network_name: "tink_network",
                                          libvirt__dhcp_enabled: false,
                                          libvirt__forward_mode: "nat"

    machine1.vm.provider "libvirt" do |v|
      v.storage :file, :size => "20G"
      v.memory = 2048
      v.cpus = 1
      v.boot "hd"
      v.boot "network"
      v.graphics_ip = "0.0.0.0"
      v.machine_arch = "x86_64"
    end
  end
 
  config.vm.define :machine2, autostart: false do |machine2|
    machine2.ssh.insert_key = false
    machine2.vm.boot_timeout = 10
    machine2.vm.synced_folder ".", "/vagrant", disabled: true
    machine2.vm.network :private_network, ip: MACHINE2_IP,
                                          mac: MACHINE2_MAC.gsub(/[:-]/, "").strip,
                                          adapter: 1,
                                          libvirt__network_name: "tink_network",
                                          libvirt__dhcp_enabled: false,
                                          libvirt__forward_mode: "nat"

    machine2.vm.provider "libvirt" do |v|
      v.storage :file, :size => "20G"
      v.memory = 2048
      v.cpus = 1
      v.boot "hd"
      v.boot "network"
      v.graphics_ip = "0.0.0.0"
      v.machine_arch = "x86_64"
    end
  end

  config.vm.define :machine3, autostart: false do |machine3|
    machine3.ssh.insert_key = false
    machine3.vm.boot_timeout = 10
    machine3.vm.synced_folder ".", "/vagrant", disabled: true
    machine3.vm.network :private_network, ip: MACHINE3_IP,
                                          mac: MACHINE3_MAC.gsub(/[:-]/, "").strip,
                                          adapter: 1,
                                          libvirt__network_name: "tink_network",
                                          libvirt__dhcp_enabled: false,
                                          libvirt__forward_mode: "nat"

    machine3.vm.provider "libvirt" do |v|
      v.storage :file, :size => "20G"
      v.memory = 2048
      v.cpus = 1
      v.boot "hd"
      v.boot "network"
      v.graphics_ip = "0.0.0.0"
      v.machine_arch = "x86_64"
    end
  end

  config.vm.define :machine4, autostart: false do |machine4|
    machine4.ssh.insert_key = false
    machine4.vm.boot_timeout = 10
    machine4.vm.synced_folder ".", "/vagrant", disabled: true
    machine4.vm.network :private_network, ip: MACHINE4_IP,
                                          mac: MACHINE4_MAC.gsub(/[:-]/, "").strip,
                                          adapter: 1,
                                          libvirt__network_name: "tink_network",
                                          libvirt__dhcp_enabled: false,
                                          libvirt__forward_mode: "nat"

    machine4.vm.provider "libvirt" do |v|
      v.storage :file, :size => "20G"
      v.memory = 2048
      v.cpus = 1
      v.boot "hd"
      v.boot "network"
      v.graphics_ip = "0.0.0.0"
      v.machine_arch = "x86_64"
    end
  end
end
