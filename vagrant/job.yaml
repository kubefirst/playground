apiVersion: v1
data:
  hardware.yaml: |-
    apiVersion: "tinkerbell.org/v1alpha1"
    kind: Hardware
    metadata:
      name: <MACHINE_NAME>
    spec:
      disks:
        - device: <DISK_DEVICE>
      metadata:
        facility:
          facility_code: sandbox
        instance:
          hostname: <MACHINE_NAME>
          id: <CLIENT_MAC>
          operating_system:
            distro: "ubuntu"
            os_slug: "ubuntu_20_04"
            version: "20.04"
      interfaces:
        - dhcp:
            arch: x86_64
            hostname: <MACHINE_NAME>
            ip:
              address: <CLIENT_IP>
              netmask: 255.255.255.0
            lease_time: 86400
            mac: <CLIENT_MAC>
            name_servers:
              - 1.1.1.1
              - 8.8.8.8
            uefi: false
          netboot:
            allowPXE: true
            allowWorkflow: true
  template.yaml: |
    apiVersion: "tinkerbell.org/v1alpha1"
    kind: Template
    metadata:
      name: <TEMPLATE_NAME>
    spec:
      data: |
        version: "0.1"
        name: ubuntu_Focal
        global_timeout: 1800
        tasks:
          - name: "os-installation"
            worker: "{{.device_1}}"
            volumes:
              - /dev:/dev
              - /dev/console:/dev/console
              - /lib/firmware:/lib/firmware:ro
            actions:
              - name: "stream-ubuntu-image"
                image: quay.io/tinkerbell-actions/image2disk:v1.0.0
                timeout: 600
                environment:
                  DEST_DISK: {{ index .Hardware.Disks 0 }}
                  IMG_URL: "http://<LOADBALANCER_IP>:8080/jammy-server-cloudimg-amd64.raw.gz"
                  COMPRESSED: true
              - name: "grow-partition"
                image: quay.io/tinkerbell-actions/cexec:v1.0.0
                timeout: 90
                environment:
                  BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}1
                  FS_TYPE: ext4
                  CHROOT: y
                  DEFAULT_INTERPRETER: "/bin/sh -c"
                  CMD_LINE: "growpart {{ index .Hardware.Disks 0 }} 1 && resize2fs {{ index .Hardware.Disks 0 }}1"
              - name: "install-openssl"
                image: quay.io/tinkerbell-actions/cexec:v1.0.0
                timeout: 90
                environment:
                  BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}1
                  FS_TYPE: ext4
                  CHROOT: y
                  DEFAULT_INTERPRETER: "/bin/sh -c"
                  CMD_LINE: "apt -y update && apt -y install openssl"
              - name: "create-user"
                image: quay.io/tinkerbell-actions/cexec:v1.0.0
                timeout: 90
                environment:
                  BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}1
                  FS_TYPE: ext4
                  CHROOT: y
                  DEFAULT_INTERPRETER: "/bin/sh -c"
                  CMD_LINE: "useradd -p $(openssl passwd -1 tink) -s /bin/bash -d /home/tink/ -m -G sudo tink"
              - name: "enable-ssh"
                image: quay.io/tinkerbell-actions/cexec:v1.0.0
                timeout: 90
                environment:
                  BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}1
                  FS_TYPE: ext4
                  CHROOT: y
                  DEFAULT_INTERPRETER: "/bin/sh -c"
                  CMD_LINE: "ssh-keygen -A; systemctl enable ssh.service; echo 'PasswordAuthentication yes' > /etc/ssh/sshd_config.d/60-cloudimg-settings.conf"
              - name: "disable-apparmor"
                image: quay.io/tinkerbell-actions/cexec:v1.0.0
                timeout: 90
                environment:
                  BLOCK_DEVICE: {{ index .Hardware.Disks 0 }}1
                  FS_TYPE: ext4
                  CHROOT: y
                  DEFAULT_INTERPRETER: "/bin/sh -c"
                  CMD_LINE: "systemctl disable apparmor; systemctl disable snapd"
              - name: "write-netplan"
                image: quay.io/tinkerbell-actions/writefile:v1.0.0
                timeout: 90
                environment:
                  DEST_DISK: {{ index .Hardware.Disks 0 }}1
                  FS_TYPE: ext4
                  DEST_PATH: /etc/netplan/config.yaml
                  CONTENTS: |
                    network:
                      version: 2
                      renderer: networkd
                      ethernets:
                        id0:
                          match:
                            name: en*
                          dhcp4: true
                  UID: 0
                  GID: 0
                  MODE: 0644
                  DIRMODE: 0755
              - name: "kexec"
                image: ghcr.io/jacobweinstock/waitdaemon:latest
                timeout: 90
                pid: host
                environment:
                  FS_TYPE: ext4
                  IMAGE: quay.io/tinkerbell-actions/kexec:v1.0.0
                  WAIT_SECONDS: 10
                volumes:
                  - /var/run/docker.sock:/var/run/docker.sock
  workflow.yaml: |
    apiVersion: "tinkerbell.org/v1alpha1"
    kind: Workflow
    metadata:
      name: <MACHINE_NAME>
    spec:
      templateRef: <TEMPLATE_NAME>
      hardwareRef: <CLIENT_MAC>
      hardwareMap:
        device_1: <CLIENT_MAC>
kind: ConfigMap
metadata:
  name: tokenized-files
  namespace: tink-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: scaffold-agent
  namespace: tink-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: scaffold-agent-clusterrole
subjects:
  - kind: ServiceAccount
    name: scaffold-agent
    namespace: tink-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: scaffold-agent
  namespace: tink-system
spec:
  template:
    spec:
      containers:
        - image: ghcr.io/kubefirst/scaffold-agent:0b7e539
          imagePullPolicy: IfNotPresent
          name: scaffold-agent
          args:
            # - sleep
            # - --time
            # - "999"
            - bootstrap
            - --apikey
            - "1"
          env:
            - name: "KUBEFIRST_DEBUG"
              value: "true"
          volumeMounts:
            - mountPath: "/home/vagrant/tokenized"
              name: work-tokenized
            - mountPath: "/home/vagrant/maninfests"
              name: work-manifests
      restartPolicy: OnFailure
      serviceAccountName: scaffold-agent
      imagePullSecrets:
        - name: github-com
      volumes:
        - name: work-tokenized
          configMap:
            name: tokenized-files
        - name: work-manifests
          emptyDir: {}
